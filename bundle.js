// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
!function(r,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(r="undefined"!=typeof globalThis?globalThis:r||self).isBuffer=t()}(this,(function(){"use strict";var r="function"==typeof Object.defineProperty?Object.defineProperty:null;var t=function(){try{return r({},"x",{}),!0}catch(r){return!1}},e=Object.defineProperty,n=Object.prototype,o=n.toString,u=n.__defineGetter__,i=n.__defineSetter__,a=n.__lookupGetter__,l=n.__lookupSetter__;var f=e,c=function(r,t,e){var f,c,y,p;if("object"!=typeof r||null===r||"[object Array]"===o.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+e+"`.");if((c="value"in e)&&(a.call(r,t)||l.call(r,t)?(f=r.__proto__,r.__proto__=n,delete r[t],r[t]=e.value,r.__proto__=f):r[t]=e.value),y="get"in e,p="set"in e,c&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&u&&u.call(r,t,e.get),p&&i&&i.call(r,t,e.set),r},y=t()?f:c;var p=function(r,t,e){y(r,t,{configurable:!1,enumerable:!1,writable:!1,value:e})};var s=function(){return"function"==typeof Symbol&&"symbol"==typeof Symbol("foo")}();var b=function(){return s&&"symbol"==typeof Symbol.toStringTag},_=Object.prototype.toString,d=_;var v=function(r){return d.call(r)},m=Object.prototype.hasOwnProperty;var g=function(r,t){return null!=r&&m.call(r,t)},j="function"==typeof Symbol?Symbol.toStringTag:"",h=g,w=j,S=_;var A=v,O=function(r){var t,e,n;if(null==r)return S.call(r);e=r[w],t=h(r,w);try{r[w]=void 0}catch(t){return S.call(r)}return n=S.call(r),t?r[w]=e:delete r[w],n},T=b()?O:A;var P=Array.isArray?Array.isArray:function(r){return"[object Array]"===T(r)};var B=function(r){return null!==r&&"object"==typeof r};p(B,"isObjectLikeArray",function(r){if("function"!=typeof r)throw new TypeError("invalid argument. Must provide a function. Value: `"+r+"`.");return function(t){var e,n;if(!P(t))return!1;if(0===(e=t.length))return!1;for(n=0;n<e;n++)if(!1===r(t[n]))return!1;return!0}}(B));var E=B;return function(r){return E(r)&&(r._isBuffer||r.constructor&&"function"==typeof r.constructor.isBuffer&&r.constructor.isBuffer(r))}}));
//# sourceMappingURL=bundle.js.map
